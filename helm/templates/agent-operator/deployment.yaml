{{- if .Values.agentOperator.enabled }}
apiVersion: {{ include "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "agentbox.fullname" . }}-agent-operator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "agentbox.labels" . | nindent 4 }}
    app.kubernetes.io/component: agent-operator
    # Add specific labels for operator deployment pods
    app.kubernetes.io/name: {{ include "agentbox.name" . }}-agent-operator
spec:
  replicas: {{ .Values.agentOperator.replicaCount }}
  selector:
    matchLabels:
      {{- include "agentbox.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: agent-operator
      app.kubernetes.io/name: {{ include "agentbox.name" . }}-agent-operator
  template:
    metadata:
      annotations:
        # Add annotations if needed, e.g., for metrics scraping
        # prometheus.io/scrape: "true"
        # prometheus.io/port: "8080"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "agentbox.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: agent-operator
        app.kubernetes.io/name: {{ include "agentbox.name" . }}-agent-operator
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agentbox.agentOperator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: agent-operator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.agentOperator.image.repository }}:{{ .Values.agentOperator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.agentOperator.image.pullPolicy }}
          # Command/args might be needed depending on how the operator is built
          # command: ["/manager"]
          # args: ["--leader-elect"]
          env:
            # Environment variable to tell the operator which namespaces to watch for Agents
            # WATCH_NAMESPACE: "" # Leave empty to watch all namespaces (requires ClusterRole)
            # Or set to specific namespaces: "agent-hello-agent,agent-another-type"

            # Environment variables for DB admin credentials
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingAdminSecretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingAdminSecretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingAdminSecretName }}
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingAdminSecretName }}
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingAdminSecretName }}
                  key: POSTGRES_PORT
            # Add other necessary environment variables for the operator
            - name: VALKEY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: valkey-admin-secret
                  key: VALKEY_ADMIN_USER
            - name: VALKEY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: valkey-admin-secret
                  key: VALKEY_ADMIN_PASSWORD
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Ensure OPERATOR_NAMESPACE is set for proper cross-namespace service FQDN construction
            - name: OPERATOR_NAMESPACE
              value: {{ .Release.Namespace }}

          ports:
            # Define container ports if needed (e.g., metrics, webhooks)
            # - name: metrics
            #   containerPort: 8080
            #   protocol: TCP
            # - name: webhook-server
            #   containerPort: 9443
            #   protocol: TCP
            - name: http # Placeholder
              containerPort: 8080 # Placeholder
              protocol: TCP # Placeholder
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8081 # Adjust port if health endpoint exists
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: 8081 # Adjust port if readiness endpoint exists
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          resources:
            {{- toYaml .Values.agentOperator.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
